# ПЕРВАЯ ВЫГРУЗКА НА GITHUB
	git init                              # Инициализация локального репозитория (создаёт .git)
	git add .                             # Добавить все файлы в индекс (стейджинг)
	git commit -m "Первый коммит"         # Сделать первый коммит
	git remote add origin https://github.com/ТВОЙ_НИК/НазваниеПроекта.git	# Привязка удалённого репозитория
	git branch -M main                    # Переименовать текущую ветку в main (если требуется)
	git push -u origin main               # Отправка кода на GitHub и установка upstream
# ОБЫЧНЫЕ ВЫГРУЗКИ И ОБНОВЛЕНИЯ
	git status                            # Проверка состояния репозитория
	git add .                             # Добавить все изменения
	git commit -m "Описание изменений"    # Сделать коммит с сообщением
	git push                              # Отправить изменения на GitHub
# ФАЙЛЫ И СТРУКТУРА
	git ls-files                          # Показать все отслеживаемые файлы
	git log                               # История коммитов
	git log --oneline                     # История в кратком виде
	git diff                              # Показать отличия между рабочей директорией и индексом
	git diff --staged                     # Показать отличия между индексом и последним коммитом
# ВЕТКИ
	git branch                            # Показать список веток
	git branch -M main                    # Переименовать текущую ветку в main
	git checkout -b новая_ветка	      # Создать и перейти на новую ветку
	git checkout ветка                    # Переключиться на другую ветку
	git merge ветка                       # Слить изменения из другой ветки
# РАБОТА С .gitignore
	# Создание .gitignore (если еще нет)
	touch .gitignore

	# Пример содержимого
	echo "node_modules/" >> .gitignore
	echo "dist/" >> .gitignore

	# Если файлы уже попали в репозиторий и теперь попали в .gitignore:
	git rm -r --cached node_modules/      # Удалить из индекса, но оставить локально
	git commit -m "Удалены игнорируемые файлы"
# РАБОТА С УДАЛЕННЫМ РЕПОЗИТОРИЕМ
	git remote -v                         # Просмотр всех удалённых репозиториев
	git remote add origin URL             # Добавить удалённый репозиторий
	git remote remove origin              # Удалить удалённый репозиторий
	git push -u origin main               # Установить upstream
# ИНФОРМАЦИЯ
	git config --list                     # Просмотр текущей конфигурации
	git config user.name "Имя"           # Установка имени пользователя
	git config user.email "email@example.com" # Установка email
# УДАЛЕНИЕ И ОТМЕНА
	git rm файл                           # Удалить файл и закоммитить
	git reset файл                        # Убрать файл из индекса, но не удалять
	git reset --hard                      # Откатить все изменения до последнего коммита
	git clean -fd                         # Удалить все неотслеживаемые файлы и папки
# ПРОЧЕЕ
	git clone https://github.com/...      # Клонировать удалённый репозиторий
	git pull                              # Получить и объединить изменения с GitHub
	git stash                             # Сохранить незакоммиченные изменения
	git stash pop                         # Вернуть сохранённые изменения
